{"version":3,"file":"soImgPreload.js","sources":["../src/imgPreload.js"],"sourcesContent":["/**\r\n * 图片预加载\r\n * @param {Array} list - 图片url 集合\r\n * @param {Object} opt - 配置项\r\n * @param {Function} opt.each - 每加载完成一张图片回调函数\r\n * @param {Function} opt.all - 所有图片加载完成回调函数\r\n * @param {Undefined|Number} opt.limit - 同时加载的图片限制\r\n */\r\nexport default function lcImgPreload(list = [], opt = {}) {\r\n  const totalLen = list.length\r\n  if (totalLen === 0) return\r\n  let allData = []\r\n  let loadedLength = 0\r\n  let successNum = 0\r\n  let failNum = 0\r\n  let totalNow = null\r\n\r\n  /**\r\n   * 加载完成回调\r\n   * @param {String} status [success|fail] - 加载状态\r\n   * @param {String} url - 当前图片的url\r\n   * @param {Number} index - 当前图片下标\r\n   * @param {Number} time - 当前图片的加载占时，单位ms\r\n   */\r\n  function imgLoadEnd(status, url, index, time) {\r\n    loadedLength++\r\n    status === 'success' ? successNum++ : failNum++\r\n    let totalTime = Date.now() - totalNow\r\n    let obj = {\r\n      status: status,\r\n      index: index,\r\n      url: url,\r\n      time: time,\r\n    }\r\n    let speed = {\r\n      success: successNum,\r\n      fail: failNum,\r\n      total: totalLen,\r\n      totalTime: totalTime\r\n    }\r\n    opt.each && opt.each(obj, speed)\r\n    allData[index] = obj\r\n    if (opt.all && loadedLength === totalLen) {\r\n      opt.all(allData, speed)\r\n    }\r\n  }\r\n\r\n  function imgLoad(url, index, cb) {\r\n    let img = new Image()\r\n    let s_img_now = Date.now()\r\n    img.src = url\r\n    img.onload = function () {\r\n      imgLoadEnd('success', url, index, Date.now() - s_img_now)\r\n      cb && cb()\r\n    }\r\n    img.onerror = function () {\r\n      imgLoadEnd('fail', url, index, Date.now() - s_img_now)\r\n      cb && cb()\r\n    }\r\n  }\r\n\r\n  let nextLoadIndex = opt.limit\r\n\r\n  let taskList = []\r\n\r\n  function loadNext() {\r\n    if (nextLoadIndex > totalLen - 1) {\r\n      return\r\n    }\r\n    taskList[nextLoadIndex]()\r\n    nextLoadIndex += 1\r\n  }\r\n\r\n  if (typeof opt.limit === 'number' && opt.limit > 0) {\r\n\r\n    let createTask = (url, index) => {\r\n      return () => {\r\n        imgLoad(url, index, loadNext)\r\n      }\r\n    }\r\n\r\n    list.forEach((p1, p2) => {\r\n      taskList.push(createTask(p1, p2))\r\n    })\r\n    totalNow = Date.now()\r\n    for (let i = 0, len = Math.min(opt.limit, totalLen); i < len; i++) {\r\n      taskList[i]()\r\n    }\r\n  } else {\r\n    totalNow = Date.now()\r\n    list.forEach((p1, p2) => {\r\n      imgLoad(p1, p2)\r\n    })\r\n  }\r\n}\r\n"],"names":["list","opt","totalLen","length","allData","loadedLength","successNum","failNum","totalNow","nextLoadIndex","limit","taskList","forEach","p1","p2","url","index","push","imgLoad","loadNext","Date","now","i","len","Math","min","imgLoadEnd","status","time","totalTime","obj","speed","success","fail","total","each","all","cb","img","Image","s_img_now","src","onload","onerror"],"mappings":"mPAQe,eAAsBA,yDAAO,GAAIC,yDAAM,GAC9CC,EAAWF,EAAKG,UACL,IAAbD,OACAE,EAAU,GACVC,EAAe,EACfC,EAAa,EACbC,EAAU,EACVC,EAAW,KA8CXC,EAAgBR,EAAIS,MAEpBC,EAAW,MAUU,iBAAdV,EAAIS,OAAkC,EAAZT,EAAIS,MAAW,CAQlDV,EAAKY,QAAQ,SAACC,EAAIC,GAND,IAACC,EAAKC,EAOrBL,EAASM,MAPOF,EAOSF,EAPJG,EAOQF,EANtB,WACLI,EAAQH,EAAKC,EAAOG,QAOxBX,EAAWY,KAAKC,UACX,IAAIC,EAAI,EAAGC,EAAMC,KAAKC,IAAIxB,EAAIS,MAAOR,GAAWoB,EAAIC,EAAKD,IAC5DX,EAASW,UAGXd,EAAWY,KAAKC,MAChBrB,EAAKY,QAAQ,SAACC,EAAIC,GAChBI,EAAQL,EAAIC,cAnEPY,EAAWC,EAAQZ,EAAKC,EAAOY,GACtCvB,IACW,YAAXsB,EAAuBrB,IAAeC,QAClCsB,EAAYT,KAAKC,MAAQb,EACzBsB,EAAM,CACRH,OAAQA,EACRX,MAAOA,EACPD,IAAKA,EACLa,KAAMA,GAEJG,EAAQ,CACVC,QAAS1B,EACT2B,KAAM1B,EACN2B,MAAOhC,EACP2B,UAAWA,GAEb5B,EAAIkC,MAAQlC,EAAIkC,KAAKL,EAAKC,GAC1B3B,EAAQY,GAASc,EACb7B,EAAImC,KAAO/B,IAAiBH,GAC9BD,EAAImC,IAAIhC,EAAS2B,YAIZb,EAAQH,EAAKC,EAAOqB,OACvBC,EAAM,IAAIC,MACVC,EAAYpB,KAAKC,MACrBiB,EAAIG,IAAM1B,EACVuB,EAAII,OAAS,WACXhB,EAAW,UAAWX,EAAKC,EAAOI,KAAKC,MAAQmB,GAC/CH,GAAMA,KAERC,EAAIK,QAAU,WACZjB,EAAW,OAAQX,EAAKC,EAAOI,KAAKC,MAAQmB,GAC5CH,GAAMA,cAQDlB,IACajB,EAAW,EAA3BO,IAGJE,EAASF,KACTA,GAAiB"}